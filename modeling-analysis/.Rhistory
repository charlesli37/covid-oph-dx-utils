}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#330033", "#f7f7f7")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
circos.clear()
pdf(file="main-figures/figure-6-dp.pdf")
#1. graphical parameters
circos.par("start.degree" = 90, #the starting degree where the first sector is put (polar coordinate system)
cell.padding = c(0, 0, 0, 0), #bottom, left, top and right padding of the cell
gap.degree = 1, #gap between two neighboring sectors; single value = same gap btwn all sectors
points.overflow.warning = FALSE,
gap.after = c(rep(2, 12), 10))
#2. allocate sectors on the circle
circos.heatmap.initialize(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))], split = master_summarystats$short_name)
#3. create plotting regions for cells, starting from outermost to innermost tracks:
## TRACK 1: RMSPEs
circos.track(ylim = c(0, 0.125),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$RMSPE[CELL_META$subset]
y = y[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y, pos = seq_along(x) - 0.5, col = case_when(y <= 0.05 ~ '#e8be27',
y > 0.05 & y < 0.10 ~ '#f5e890',
TRUE ~ 'light grey'), border = NA)
}
)
set_track_gap(cm_h(0.25))
## TRACK 2: heatmaps of quarterly deviations post-hiatus (weighted by alpha)
circos.heatmap(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))],
col = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")),
show.sector.labels = FALSE,
cluster = TRUE)
## TRACK 2B: heatmap "y-axis" labels
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = c("Q3'20", "Q4'20", "Q1'21", "Q2'21", "Q3'21", "Q4'21")
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-7.5, "mm"),
1:n - 0.5, cn,
cex = 0.5, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 1.5: diagnosis category labels
circos.track(track.index = 2,
track.margin = c(0, mm_h(2)),
bg.border = NA,
panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(0.5, "mm"),
paste0(CELL_META$sector.index),
facing = "bending.inside", cex = 0.7,
adj = c(0.5, 0), niceFacing = TRUE)}
)
set_track_gap(cm_h(0.05))
## TRACK 3: heatmap of April 2020 deviations (raw, unweighted)
circos.heatmap(master_summarystats[, rev(c("2020-04-01"))], track.height = mm_h(2.5),
col = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#54278f", "#f7f7f7")))
### TRACK 3B: heatmap "y-axis" label
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = "Hiatus"
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-6, "mm"),
1:n - 0.5, cn,
cex = 0.455, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 4: barplots of time-to-recovery
circos.track(ylim = c(-21, 0),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$recoveredMonthNum[CELL_META$subset] * -1
y = y[CELL_META$row_order]
r = master_summarystats$fullRecovery[CELL_META$subset]
r = r[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y,
pos = seq_along(x) - 0.5,
col = ifelse(r == T, '#66c2a4', '#b2e2e2'),
border = NA)
}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#54278f", "#f7f7f7")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
circos.clear()
pdf(file="main-figures/figure-6-dp.pdf")
#1. graphical parameters
circos.par("start.degree" = 90, #the starting degree where the first sector is put (polar coordinate system)
cell.padding = c(0, 0, 0, 0), #bottom, left, top and right padding of the cell
gap.degree = 1, #gap between two neighboring sectors; single value = same gap btwn all sectors
points.overflow.warning = FALSE,
gap.after = c(rep(2, 12), 10))
#2. allocate sectors on the circle
circos.heatmap.initialize(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))], split = master_summarystats$short_name)
#3. create plotting regions for cells, starting from outermost to innermost tracks:
## TRACK 1: RMSPEs
circos.track(ylim = c(0, 0.125),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$RMSPE[CELL_META$subset]
y = y[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y, pos = seq_along(x) - 0.5, col = case_when(y <= 0.05 ~ '#e8be27',
y > 0.05 & y < 0.10 ~ '#f5e890',
TRUE ~ 'light grey'), border = NA)
}
)
set_track_gap(cm_h(0.25))
## TRACK 2: heatmaps of quarterly deviations post-hiatus (weighted by alpha)
circos.heatmap(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))],
col = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")),
show.sector.labels = FALSE,
cluster = TRUE)
## TRACK 2B: heatmap "y-axis" labels
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = c("Q3'20", "Q4'20", "Q1'21", "Q2'21", "Q3'21", "Q4'21")
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-7.5, "mm"),
1:n - 0.5, cn,
cex = 0.5, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 1.5: diagnosis category labels
circos.track(track.index = 2,
track.margin = c(0, mm_h(2)),
bg.border = NA,
panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(0.5, "mm"),
paste0(CELL_META$sector.index),
facing = "bending.inside", cex = 0.7,
adj = c(0.5, 0), niceFacing = TRUE)}
)
set_track_gap(cm_h(0.05))
## TRACK 3: heatmap of April 2020 deviations (raw, unweighted)
circos.heatmap(master_summarystats[, rev(c("2020-04-01"))], track.height = mm_h(2.5),
col = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")))
### TRACK 3B: heatmap "y-axis" label
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = "Hiatus"
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-6, "mm"),
1:n - 0.5, cn,
cex = 0.455, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 4: barplots of time-to-recovery
circos.track(ylim = c(-21, 0),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$recoveredMonthNum[CELL_META$subset] * -1
y = y[CELL_META$row_order]
r = master_summarystats$fullRecovery[CELL_META$subset]
r = r[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y,
pos = seq_along(x) - 0.5,
col = ifelse(r == T, '#66c2a4', '#b2e2e2'),
border = NA)
}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
circos.clear()
pdf(file="main-figures/figure-6-dp.pdf")
#1. graphical parameters
circos.par("start.degree" = 90, #the starting degree where the first sector is put (polar coordinate system)
cell.padding = c(0, 0, 0, 0), #bottom, left, top and right padding of the cell
gap.degree = 1, #gap between two neighboring sectors; single value = same gap btwn all sectors
points.overflow.warning = FALSE,
gap.after = c(rep(2, 12), 10))
#2. allocate sectors on the circle
circos.heatmap.initialize(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))], split = master_summarystats$short_name)
#3. create plotting regions for cells, starting from outermost to innermost tracks:
## TRACK 1: RMSPEs
circos.track(ylim = c(0, 0.125),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$RMSPE[CELL_META$subset]
y = y[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y, pos = seq_along(x) - 0.5, col = case_when(y <= 0.05 ~ '#e8be27',
y > 0.05 & y < 0.10 ~ '#f5e890',
TRUE ~ 'light grey'), border = NA)
}
)
set_track_gap(cm_h(0.25))
## TRACK 2: heatmaps of quarterly deviations post-hiatus (weighted by alpha)
circos.heatmap(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))],
col = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")),
show.sector.labels = FALSE,
cluster = TRUE)
## TRACK 2B: heatmap "y-axis" labels
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = c("Q3'20", "Q4'20", "Q1'21", "Q2'21", "Q3'21", "Q4'21")
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-7.5, "mm"),
1:n - 0.5, cn,
cex = 0.5, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 1.5: diagnosis category labels
circos.track(track.index = 2,
track.margin = c(0, mm_h(2)),
bg.border = NA,
panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(0.5, "mm"),
paste0(CELL_META$sector.index),
facing = "bending.inside", cex = 0.7,
adj = c(0.5, 0), niceFacing = TRUE)}
)
set_track_gap(cm_h(0.05))
## TRACK 3: heatmap of April 2020 deviations (raw, unweighted)
circos.heatmap(master_summarystats[, rev(c("2020-04-01"))], track.height = mm_h(2.5),
col = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")))
### TRACK 3B: heatmap "y-axis" label
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = "Hiatus"
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-6, "mm"),
1:n - 0.5, cn,
cex = 0.455, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 4: barplots of time-to-recovery
circos.track(ylim = c(-21, 0),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$recoveredMonthNum[CELL_META$subset] * -1
y = y[CELL_META$row_order]
r = master_summarystats$fullRecovery[CELL_META$subset]
r = r[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y,
pos = seq_along(x) - 0.5,
col = ifelse(r == T, '#66c2a4', '#b2e2e2'),
border = NA)
}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", border = "gray20", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
border = "gray20",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
circos.clear()
pdf(file="main-figures/figure-6-dp.pdf")
#1. graphical parameters
circos.par("start.degree" = 90, #the starting degree where the first sector is put (polar coordinate system)
cell.padding = c(0, 0, 0, 0), #bottom, left, top and right padding of the cell
gap.degree = 1, #gap between two neighboring sectors; single value = same gap btwn all sectors
points.overflow.warning = FALSE,
gap.after = c(rep(2, 12), 10))
#2. allocate sectors on the circle
circos.heatmap.initialize(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))], split = master_summarystats$short_name)
#3. create plotting regions for cells, starting from outermost to innermost tracks:
## TRACK 1: RMSPEs
circos.track(ylim = c(0, 0.125),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$RMSPE[CELL_META$subset]
y = y[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y, pos = seq_along(x) - 0.5, col = case_when(y <= 0.05 ~ '#e8be27',
y > 0.05 & y < 0.10 ~ '#f5e890',
TRUE ~ 'light grey'), border = NA)
}
)
set_track_gap(cm_h(0.25))
## TRACK 2: heatmaps of quarterly deviations post-hiatus (weighted by alpha)
circos.heatmap(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))],
col = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")),
show.sector.labels = FALSE,
cluster = TRUE)
## TRACK 2B: heatmap "y-axis" labels
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = c("Q3'20", "Q4'20", "Q1'21", "Q2'21", "Q3'21", "Q4'21")
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-7.5, "mm"),
1:n - 0.5, cn,
cex = 0.5, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 1.5: diagnosis category labels
circos.track(track.index = 2,
track.margin = c(0, mm_h(2)),
bg.border = NA,
panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(0.5, "mm"),
paste0(CELL_META$sector.index),
facing = "bending.inside", cex = 0.7,
adj = c(0.5, 0), niceFacing = TRUE)}
)
set_track_gap(cm_h(0.05))
## TRACK 3: heatmap of April 2020 deviations (raw, unweighted)
circos.heatmap(master_summarystats[, rev(c("2020-04-01"))], track.height = mm_h(2.5),
col = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")))
### TRACK 3B: heatmap "y-axis" label
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = "Hiatus"
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-6, "mm"),
1:n - 0.5, cn,
cex = 0.455, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 4: barplots of time-to-recovery
circos.track(ylim = c(-21, 0),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$recoveredMonthNum[CELL_META$subset] * -1
y = y[CELL_META$row_order]
r = master_summarystats$fullRecovery[CELL_META$subset]
r = r[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y,
pos = seq_along(x) - 0.5,
col = ifelse(r == T, '#66c2a4', '#b2e2e2'),
border = NA)
}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
border = "gray85",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
circos.clear()
pdf(file="main-figures/figure-6.pdf")
#1. graphical parameters
circos.par("start.degree" = 90, #the starting degree where the first sector is put (polar coordinate system)
cell.padding = c(0, 0, 0, 0), #bottom, left, top and right padding of the cell
gap.degree = 1, #gap between two neighboring sectors; single value = same gap btwn all sectors
points.overflow.warning = FALSE,
gap.after = c(rep(2, 12), 10))
#2. allocate sectors on the circle
circos.heatmap.initialize(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))], split = master_summarystats$short_name)
#3. create plotting regions for cells, starting from outermost to innermost tracks:
## TRACK 1: RMSPEs
circos.track(ylim = c(0, 0.125),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$RMSPE[CELL_META$subset]
y = y[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y, pos = seq_along(x) - 0.5, col = case_when(y <= 0.05 ~ '#e8be27',
y > 0.05 & y < 0.10 ~ '#f5e890',
TRUE ~ 'light grey'), border = NA)
}
)
set_track_gap(cm_h(0.25))
## TRACK 2: heatmaps of quarterly deviations post-hiatus (weighted by alpha)
circos.heatmap(master_summarystats[, rev(c("Q32020w_adj", "Q42020w_adj", "Q12021w_adj", "Q22021w_adj", "Q32021w_adj", "Q42021w_adj"))],
col = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")),
show.sector.labels = FALSE,
cluster = TRUE)
## TRACK 2B: heatmap "y-axis" labels
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = c("Q3'20", "Q4'20", "Q1'21", "Q2'21", "Q3'21", "Q4'21")
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-7.5, "mm"),
1:n - 0.5, cn,
cex = 0.5, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 1.5: diagnosis category labels
circos.track(track.index = 2,
track.margin = c(0, mm_h(2)),
bg.border = NA,
panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(0.5, "mm"),
paste0(CELL_META$sector.index),
facing = "bending.inside", cex = 0.7,
adj = c(0.5, 0), niceFacing = TRUE)}
)
set_track_gap(cm_h(0.05))
## TRACK 3: heatmap of April 2020 deviations (raw, unweighted)
circos.heatmap(master_summarystats[, rev(c("2020-04-01"))], track.height = mm_h(2.5),
col = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")))
### TRACK 3B: heatmap "y-axis" label
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 1) { # place before the first sector
cn = "Hiatus"
n = length(cn)
circos.text(rep(CELL_META$cell.xlim[1], n) + convert_x(-6, "mm"),
1:n - 0.5, cn,
cex = 0.455, adj = c(0, 0.5), facing = "inside", niceFacing = TRUE)
}
}, bg.border = NA)
## TRACK 4: barplots of time-to-recovery
circos.track(ylim = c(-21, 0),
bg.border = NA,
panel.fun = function(x, y){
x = master_summarystats$rn[CELL_META$subset]
x = x[CELL_META$row_order]
y = master_summarystats$recoveredMonthNum[CELL_META$subset] * -1
y = y[CELL_META$row_order]
r = master_summarystats$fullRecovery[CELL_META$subset]
r = r[CELL_META$row_order]
circos.lines(CELL_META$cell.xlim, c(0, 0), col = "black", cex = .6)
circos.barplot(value = y,
pos = seq_along(x) - 0.5,
col = ifelse(r == T, '#66c2a4', '#b2e2e2'),
border = NA)
}
)
circos.yaxis(side = "left", sector.index = "Blind", labels.cex = 0.35, lwd = 0.5, at = c(0, -6, -12, -18, -21), labels = c(0, 6, 12, 18, 21))
## LEGENDS
lgd_trk1 = ComplexHeatmap::Legend(title = "Model performance error", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Below 5%", "5-10%", "10-12.5%"), legend_gp = gpar(fill = c('#e8be27','#f5e890', 'light grey')), labels_gp = gpar(fontsize = 7))
lgd_trk2 = ComplexHeatmap::Legend(title = "Post-hiatus deviation", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c(-4, -2, 0, 2, 4), labels = c(expression(-delta*"*"), "", "", "", expression(+delta*"*")), col_fun = colorRamp2(c(-4, 0, 4), c("#de425b", "#eeeeee", "#21a6db")), direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk3 = ComplexHeatmap::Legend(title = "Apr 2020 decrease",
border = "gray85",
title_gp = gpar(fontsize = 8, fontface = 'bold'),
at = c(-1, 0),
labels = c(expression(delta['max']==-0.91), expression(delta['min']==-0.18)),
col_fun = colorRamp2(c(min(master_summarystats$`2020-04-01`), max(master_summarystats$`2020-04-01`)), c("#3f007d", "#fcfbfd")),
direction = 'horizontal', legend_width = unit(3, "cm"), labels_gp = gpar(fontsize = 7))
lgd_trk4 = ComplexHeatmap::Legend(title = "Time to recovery", title_gp = gpar(fontsize = 8, fontface = 'bold'), at = c("Partial recovery", "Sustained recovery"), legend_gp = gpar(fill = c('#b2e2e2','#66c2a4')), labels_gp = gpar(fontsize = 7))
lgd_listA = ComplexHeatmap::packLegend(lgd_trk1, lgd_trk4, direction = "vertical", row_gap = unit(2, "mm"))
lgd_listB = ComplexHeatmap::packLegend(lgd_trk2, lgd_trk3, direction = "vertical", row_gap = unit(2, "mm"))
ComplexHeatmap::draw(lgd_listA, x = unit(0.5, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
ComplexHeatmap::draw(lgd_listB, x = unit(14, "cm"), y = unit(0.10, "cm"), just = c("left", "bottom"))
dev.off()
View(master_dev_bounds)
